# Use default user name of 'nginx' (doesn't matter for this example)
user nginx;

# This could be increased later when on multiple cores
worker_processes 1;

# Set the location of the error log file, and only log warnings or higher
error_log /var/log/nginx/error.log warn;

# Store process ID to a file, for uses like determining the uptime of a server
pid /var/run/nginx.pid;

events {
	# Use maximum number of concurrent connections
	worker_connections 1024;

	# Enable worker processes to accept multiple new connections at the same time
	multi_accept on;
}

http {
	# Include the default MIME type mappings
	include /etc/nginx/mime.types;

	# If a MIME type is not found in the above mappings, default to
	# application/octet-stream, which tells the browser to download the file.
	default_type application/octet-stream;

	# Define the format for how each HTTP event is logged
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
	                '$status $body_bytes_sent "$http_referer" '
	                '"$http_user_agent" "$http_x_forwarded_for"';

	# Set the location for the main access log file
	access_log /var/log/nginx/access.log main;

	# Enable sending files in chunks rather than as whole files
	sendfile on;

	# Keep a connection open for 65 seconds (default) before closing it,
	# so users don't need to constantly re-open connections for multiple files.
	keepalive_timeout 65;

	# Optimize SSL sessions by increasing shared cache size and timeout length
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 15m;

	# Include Nginx default configuration
	# include /etc/nginx/conf.d/*.conf;

	server {
		# Listen on port 80 (default for HTTP) for localhost
		listen 80;
		listen [::]:80;
		server_name 127.0.0.1 localhost;

		# Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response
		return 301 https://$host$request_uri;
	}

	server {
		# Listen on port 443 for SSL connections
		listen 443 ssl;
		listen [::]:443 ssl;
		server_name 127.0.0.1 localhost;

		# Define locations for SSL cert and private key
		ssl_certificate /etc/nginx/ssl/cert.crt;
		ssl_certificate_key /etc/nginx/ssl/private.key;

		# Define the root path on this file system for where to find the HTML files
		root /etc/nginx/html;

		# When a 404 error occurs, redirect to the 404 error page
		error_page 404 /404/;
	}
}

# Disable deamonization so that the Nginx process runs in the foreground,
# rather than as a background process. (This is because if something runs
# in the background, Docker will immediately halt the container.)
daemon off;
